SET(KIT Common)
SET(UKIT COMMON)


##
## Version stuff
##
SET(OPENSIM_COMMON_LIBRARY_NAME osim${KIT})
SET(OPENSIM_COMMON_MAJOR_VERSION 3)
SET(OPENSIM_COMMON_MINOR_VERSION 0)
SET(OPENSIM_COMMON_BUILD_VERSION 0)
SET(OPENSIM_COMMON_COPYRIGHT_YEARS "2005-6")
# comma separated list of authors
SET(OPENSIM_COMMON_AUTHORS  "Clay_Anderson-Ayman_Habib_and_Peter_Loan") 


ADD_DEFINITIONS(-DOPENSIM_COMMON_LIBRARY_NAME=${OPENSIM_COMMON_LIBRARY_NAME}
-DOPENSIM_COMMON_MAJOR_VERSION=${OPENSIM_COMMON_MAJOR_VERSION}
-DOPENSIM_COMMON_MINOR_VERSION=${OPENSIM_COMMON_MINOR_VERSION}
-DOPENSIM_COMMON_BUILD_VERSION=${OPENSIM_COMMON_BUILD_VERSION}
-DOPENSIM_COMMON_COPYRIGHT_YEARS="${OPENSIM_COMMON_COPYRIGHT_YEARS}"
-DOPENSIM_COMMON_AUTHORS="${OPENSIM_COMMON_AUTHORS}"
-DOPENSIM_COMMON_TYPE="Shared")


FILE(GLOB SOURCE_FILES *.cpp gcvspl.c)
FILE(GLOB INCLUDE_FILES *.h gcvspl.h)

INCLUDE_DIRECTORIES(${OpenSim_SOURCE_DIR}/Vendors ${OpenSim_SOURCE_DIR})

SET(EXPORT_MACRO OSIM${UKIT}_EXPORTS)

IF( WIN32 ) 
    LINK_LIBRARIES( ${SIMTK_COMMON_LIB} ${SIMTK_MATH_LIB} ${MATH_LIBS_TO_USE})
ELSE( WIN32)
    LINK_LIBRARIES( ${SIMTK_COMMON_LIB} ${SIMTK_MATH_LIB} ${MATH_LIBS_TO_USE} )
ENDIF(WIN32)


ADD_LIBRARY(osim${KIT} SHARED ${SOURCE_FILES} ${INCLUDE_FILES}) 

SET_TARGET_PROPERTIES(osim${KIT} PROPERTIES
   DEFINE_SYMBOL ${EXPORT_MACRO}
   PROJECT_LABEL "Libraries - osim${KIT}"
)

# Shared libraries are needed at runtime for applications, so we put them
# at the top level in OpenSim/bin/*.dll (Windows) or OpenSim/lib/*.so (Linux)
# or OpemSim/lib/*.dylib (Mac). Windows .lib files, and Linux/Mac .a static
# archives are only needed at link time so go in sdk/lib.
IF(WIN32)
    INSTALL(TARGETS osim${KIT}
            RUNTIME DESTINATION bin
            LIBRARY DESTINATION sdk/lib
            ARCHIVE DESTINATION sdk/lib)
ELSE()
    INSTALL(TARGETS osim${KIT}
            RUNTIME DESTINATION bin
            LIBRARY DESTINATION lib
            ARCHIVE DESTINATION sdk/lib)
ENDIF()

INSTALL(FILES ${INCLUDE_FILES}
        DESTINATION sdk/include/OpenSim/${KIT})

#
# Testing
#
ENABLE_TESTING()

IF (EXECUTABLE_OUTPUT_PATH)
  SET (TEST_PATH ${EXECUTABLE_OUTPUT_PATH})
ELSE (EXECUTABLE_OUTPUT_PATH)
  SET (TEST_PATH .)
ENDIF (EXECUTABLE_OUTPUT_PATH)
#
IF(BUILD_TESTING)
    SUBDIRS(Test)
ENDIF(BUILD_TESTING)
