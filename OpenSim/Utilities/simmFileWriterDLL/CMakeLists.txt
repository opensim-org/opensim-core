SET(KIT SimmFileWriter)
SET(UKIT SIMMFILEWRITER)

##
## Version stuff
##
SET(OPENSIM_SIMMFILEWRITER_LIBRARY_NAME osim${KIT})
SET(OPENSIM_SIMMFILEWRITER_MAJOR_VERSION 3)
SET(OPENSIM_SIMMFILEWRITER_MINOR_VERSION 0)
SET(OPENSIM_SIMMFILEWRITER_BUILD_VERSION 0)
SET(OPENSIM_SIMMFILEWRITER_COPYRIGHT_YEARS "2008")
# comma separated list of authors
SET(OPENSIM_SIMMFILEWRITER_AUTHORS  "Peter_Loan") 


ADD_DEFINITIONS(-DOPENSIM_SIMMFILEWRITER_LIBRARY_NAME=${OPENSIM_SIMMFILEWRITER_LIBRARY_NAME}
-DOPENSIM_SIMMFILEWRITER_MAJOR_VERSION=${OPENSIM_SIMMFILEWRITER_MAJOR_VERSION}
-DOPENSIM_SIMMFILEWRITER_MINOR_VERSION=${OPENSIM_SIMMFILEWRITER_MINOR_VERSION}
-DOPENSIM_SIMMFILEWRITER_BUILD_VERSION=${OPENSIM_SIMMFILEWRITER_BUILD_VERSION}
-DOPENSIM_SIMMFILEWRITER_COPYRIGHT_YEARS="${OPENSIM_SIMMFILEWRITER_COPYRIGHT_YEARS}"
-DOPENSIM_SIMMFILEWRITER_AUTHORS="${OPENSIM_SIMMFILEWRITER_AUTHORS}"
-DOPENSIM_SIMMFILEWRITER_TYPE="Shared")

FILE(GLOB SOURCE_FILES *.cpp)
FILE(GLOB INCLUDE_FILES *.h)

INCLUDE_DIRECTORIES(${OpenSim_SOURCE_DIR} ${OpenSim_SOURCE_DIR}/Vendors)

SET(EXPORT_MACRO OSIM${UKIT}_EXPORTS)

LINK_LIBRARIES( debug     osimCommon_d optimized osimCommon
                debug     osimSimulation_d optimized osimSimulation
                debug     osimActuators_d optimized osimActuators
                ${SIMTK_ALL_LIBS})

ADD_LIBRARY(osim${KIT} SHARED ${SOURCE_FILES} ${INCLUDE_FILES}) 

SET_TARGET_PROPERTIES(osim${KIT} PROPERTIES
   DEFINE_SYMBOL ${EXPORT_MACRO}
   PROJECT_LABEL "Libraries - osim${KIT}"
)

# Shared libraries are needed at runtime for applications, so we put them
# at the top level in OpenSim/bin/*.dll (Windows) or OpenSim/lib/*.so (Linux)
# or OpemSim/lib/*.dylib (Mac). Windows .lib files, and Linux/Mac .a static
# archives are only needed at link time so go in sdk/lib.
IF(WIN32)
    INSTALL(TARGETS osim${KIT}
            RUNTIME DESTINATION bin
            LIBRARY DESTINATION sdk/lib
            ARCHIVE DESTINATION sdk/lib)
ELSE()
    INSTALL(TARGETS osim${KIT}
            RUNTIME DESTINATION bin
            LIBRARY DESTINATION lib
            ARCHIVE DESTINATION sdk/lib)
ENDIF()